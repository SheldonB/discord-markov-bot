name: Build and Push Docker Image

on:
  push:
    branches: [ master ]
    
jobs:

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements/dev.txt ]; then pip install -r requirements/dev.txt; fi

    - name: Run Unit Tests
      run: |
        python -m unittest


  build-and-publish-docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag sheldonburks/discord-markov-bot:latest
    
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: sheldonburks/discord-markov-bot
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  
  deploy-container:
    name: Deploy Container
    runs-on: ubuntu-latest
    needs: [test, build-and-publish-docker-image]

    steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Image to Azure Container Instances
      uses: Azure/aci-deploy@v1
      with:
        resource-group: discord-markov-bot
        image: sheldonburks/discord-markov-bot:latest
        name: discord-markov-bot
        dns-name-label: 'discord-markov-bot'
        cpu: 1
        memory: 1
        location: 'east us'
        registry-login-server: index.docker.io
        registry-username: ${{ secrets.DOCKER_USERNAME }}
        registry-password: ${{ secrets.DOCKER_PASSWORD }}
        environment-variables: DB_PATH=/mnt/db/
        secure-environment-variables: DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}
        azure-file-volume-account-key: ${{ secrets.AZURE_FILE_VOLUME_ACCOUNT_KEY }}
        azure-file-volume-account-name: ${{ secrets.AZURE_FILE_VOLUME_ACCOUNT_NAME }}
        azure-file-volume-mount-path: /mnt/db/
        azure-file-volume-share-name: discord-markov-bot

    - name: Restart Container Group
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az container restart --resource-group Discord-Markov-Bot --name discord-markov-bot 
